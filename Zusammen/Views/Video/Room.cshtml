@model RoomAndFilm

@{
    ViewBag.Name = "Room";
    ViewBag.Title = "Room " + @Model.Room.name;
    Layout = "_Layout";
}

<h2 style="color:white;" id="film-name">Фільм @Model.Room.name </h2>
<div class="flexdivrow" style="width: 115%;margin-left: -100px;">
    <button id="start" style="width: 60%; height: 550px; background-color: black">
        <video id="film-video" src='' preload="auto" autoplay="autoplay" controls="controls"></video>
    </button>
    <div style="width: 40%; height: 550px; background-color: rgb(3, 91, 93); padding-left: 20px">
        <div class="chat-container">
                <div class="chat-header">
                    <h2>Chat</h2>
                </div>
                <div class="chat-messages" id="chat-messages">
                </div>
                <div class="chat-input">
                    <input type="text" id="username" placeholder="Your Name">
                    <input type="text" id="message" placeholder="Type your message">
                    <button id="send">Send</button>
                </div>
            </div>
    </div>
    
</div>


@* <script> *@
@*     function sendMessage() { *@
@*   const username = document.getElementById('username').value; *@
@*   const message = document.getElementById('message').value; *@
@* *@
@*   if (username && message) { *@
@*     const chatMessages = document.getElementById('chat-messages'); *@
@*     const messageElement = document.createElement('div'); *@
@*     messageElement.innerHTML = `<strong>${username}:</strong> ${message}`; *@
@*     chatMessages.appendChild(messageElement); *@
@* *@
@*     // Clear the message input *@
@*     document.getElementById('message').value = ''; *@
@* *@
@*     // Save the chat messages to localStorage *@
@*     const messages = chatMessages.innerHTML; *@
@*     localStorage.setItem('chatMessages', messages); *@
@*   } *@
@* } *@
@* *@
@* // Load chat messages from localStorage on page load *@
@* window.addEventListener('load', () => { *@
@*   const chatMessages = document.getElementById('chat-messages'); *@
@*   const savedMessages = localStorage.getItem('chatMessages'); *@
@*   if (savedMessages) { *@
@*     chatMessages.innerHTML = savedMessages; *@
@*   } *@
@* }); *@
@*   </script> *@
<!-- Створення кнопки запрошення -->
@using (Html.BeginForm("GenerateRoomConnectUrl", "Video", FormMethod.Post))
{
    <div>
        <input type="hidden" name="filmId" value="@Model.Room.id"/>
        <button id="create-invitation" class="buttonMYroom" type="submit">Створити запрошення</button>
    </div>
}

<!-- Сповіщення -->
<div id="notification-wrapper"></div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Підключення jQuery -->
<script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

<script type="text/javascript">
// Отримання даних про кімнату.
function getModelData(){
    let modelData = {
        id: @Model.Room.id,
        videoPath: "@Model.FilmPath"
    };
    return modelData;
}

// Отримання імені користувача.
function getUserName(){
    return '@ViewContext.HttpContext.Session.GetString("userName")';
}

document.getElementById('create-invitation').addEventListener('click', function(event) {
    event.preventDefault(); // Запобігаємо дії за замовчуванням (відправці форми)
    // Отримуємо дані з метода за допомогою AJAX-запиту
    $.ajax({
        url: '/Video/GenerateRoomConnectUrl',
        type: 'POST',
        data: { roomId: @Model.Room.id },
        success: function(modelData) {
            // Видаляємо попереднє повідомлення, якщо воно є
            var previousNotification = document.querySelector('.custom-notification');
            if (previousNotification) {
                previousNotification.parentNode.removeChild(previousNotification);
            }

            // Створення власного сповіщення
            var notification = document.createElement('div');
            notification.className = 'custom-notification';
            notification.innerHTML = 'Створено запрошення для кімнати: ' + modelData + '.</br>';
            
            // Додаємо кнопку для закриття сповіщення
            var closeButton = document.createElement('button');
            closeButton.innerHTML = 'Копіювати';
            closeButton.className = 'close-button';
            closeButton.addEventListener('click', function() {
                // Копіюємо посилання в буфер обміну
                var textArea = document.createElement("textarea");
                textArea.value = modelData;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand("Copy");
                document.body.removeChild(textArea);

                // Закриваємо сповіщення
                notification.style.opacity = '0';
                setTimeout(function() {
                    document.getElementById('notification-wrapper').removeChild(notification);
                }, 300);
            });
            
            notification.appendChild(closeButton);
            
            document.getElementById('notification-wrapper').appendChild(notification);
        },
        error: function() {
            alert('Помилка при створенні запрошення.');
        }
    });
});
</script>
<script src="~/js/videoRecieve.js"></script>
<script src='~/js/messageHub.js'></script>